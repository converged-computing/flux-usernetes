# Use `make up`, not `docker compose up`,
# as this YAML requires ${...} variables to be set.
---
services:
  node:
    build: .
    hostname: ${NODE_NAME}
    privileged: true
    restart: always
    runtime: nvidia
    networks:
      default:
        ipv4_address: ${NODE_IP}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all # or number of GPUs
              capabilities: [gpu]
    ports:
      # <host>:<container>
      # etcd (default: 2379)
      - ${PORT_ETCD}:${PORT_ETCD}
      # kube-apiserver (default: 6443)
      - ${PORT_KUBE_APISERVER}:${PORT_KUBE_APISERVER}
      # kubelet (default: 10250)
      - ${PORT_KUBELET}:${PORT_KUBELET}
      # flannel (default: 8472)
      - ${PORT_FLANNEL}:${PORT_FLANNEL}/udp
    volumes:
      - .:/usernetes:ro
      - /boot:/boot:ro
      - /opt/conda
      - /opt/deeplearning
      - /lib/modules:/lib/modules:ro
      - node-var:/var
      - node-opt:/opt
      - node-etc:/etc
      - type: tmpfs
        target: /var/lib/containerd
      - type: tmpfs
        target: /run
      - type: tmpfs
        target: /tmp
    working_dir: /usernetes
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf
      HOST_IP: ${HOST_IP}
    sysctls:
      - net.ipv4.ip_forward=1
      # In addition, `net.ipv4.conf.default.rp_filter`
      # has to be set to 0 (disabled) or 2 (loose)
      # in the daemon's network namespace.
    annotations:
      # Accelerate network for nerdctl >= 2.0.0-beta.4 with bypass4netns >= 0.4.1
      "nerdctl/bypass4netns": "${BYPASS4NETNS:-false}"
      "nerdctl/bypass4netns-ignore-bind": "true"
      "nerdctl/bypass4netns-ignore-subnets": "${BYPASS4NETNS_IGNORE_SUBNETS:-}"
networks:
  default:
    ipam:
      config:
        # Each of the nodes has to have a different IP.
        # The node IP here is not accessible from other nodes.
        - subnet: ${NODE_SUBNET}
volumes:
  node-var: {}
  node-opt: {}
  node-etc: {}

