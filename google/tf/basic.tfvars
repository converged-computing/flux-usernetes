compute_family = "flux-usernetes-ubuntu"
compute_node_specs = [
  {
    name_prefix  = "flux"
    machine_arch = "x86-64"
    machine_type = "c2d-standard-112"
    gpu_type     = null
    gpu_count    = 0
    compact      = false
    instances    = 2
    properties   = []
    boot_script  = <<BOOT_SCRIPT
#!/bin/sh

# This is already built into the image
fluxuser=flux
fluxuid=$(id -u $fluxuser)

# Add our public key to ubuntu to ssh in.
# You will need to add an ip address to flux-001 to ssh in
echo "<INSERT-PUBLIC-KEY-HERE>" >> /home/ubuntu/.ssh/authorized_keys

echo "Flux username: flux"
echo "Flux install root: /usr"

mkdir -p /var/nfs/home || true
chown nobody:nobody /var/nfs/home || true

echo "flux ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
printf "flux user identifiers:\n$(id flux)\n"

# Regenerate resources
flux R encode --hosts=flux-[001-999] --local > R
sudo mv R /usr/etc/flux/system/R

printf "\nðŸ“¦ Resources\n"
cat /usr/etc/flux/system/R

printf "\nðŸ¦Š Independent Minister of Privilege\n"
cat /etc/flux/imp/conf.d/imp.toml

# /usr/sbin/create-munge-key
service munge start

printf "\nâœ¨ Curve certificate generated by helper pod\n"
cat /usr/etc/flux/system/curve.cert
mkdir -p /etc/flux/manager

systemctl enable flux-start.service
systemctl start flux-start.service

# This enables NFS
nfsmounts=$(curl "http://metadata.google.internal/computeMetadata/v1/instance/attributes/nfs-mounts" -H "Metadata-Flavor: Google")

if [[ "X$nfsmounts" != "X" ]]; then
    echo "Enabling NFS mounts"
    share=$(echo $nfsmounts | jq -r '.share')
    mountpoint=$(echo $nfsmounts | jq -r '.mountpoint')

    bash -c "sudo echo $share $mountpoint nfs defaults,hard,intr,_netdev 0 0 >> /etc/fstab"
    mount -a
fi
BOOT_SCRIPT

  },
]
compute_scopes = ["cloud-platform"]
